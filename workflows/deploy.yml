 name: CD — Terraform Apply & Deploy
 on:
 push:
 branches: ["main"]
 workflow_dispatch:
 env:
 AWS_REGION: ${{ vars.AWS_REGION || 'ap-south-1' }}
 IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/devops-webapp
 jobs:
 deploy:
 runs-on: ubuntu-latest
 steps:- uses: actions/checkout@v4
 8
- name: Configure AWS creds
 uses: aws-actions/configure-aws-credentials@v4
 with:
 aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
 aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 aws-region: ${{ env.AWS_REGION }}- name: Set up Terraform
 uses: hashicorp/setup-terraform@v3
 with:
 terraform_version: 1.7.5- name: Terraform Init/Apply
 run: |
 terraform -chdir=infra init
 terraform -chdir=infra apply -auto-approve- name: Read Elastic IP from Terraform outputs
 id: tfout
 run: |
 echo "EC2_IP=$(terraform -chdir=infra output -raw eip_public_ip)" >> 
$GITHUB_OUTPUT- name: SSH — Pull & Restart Container
 uses: appleboy/ssh-action@v1.0.3
 with:
 host: ${{ steps.tfout.outputs.EC2_IP }}
 username: ubuntu
 key: ${{ secrets.AWS_SSH_KEY }}
 script: |
 sudo docker pull ${{ env.IMAGE }}:latest
 sudo docker stop webapp || true
 sudo docker rm webapp || true
 sudo docker run -d --name webapp --restart unless-stopped -p 80:5000 $